<!doctype html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>CH5EX5: Multiple Ball Bounce</title>

<link rel="stylesheet" href="css/normalize.css" />
    <link rel="stylesheet" href="css/ion.rangeSlider.css" />
    <link rel="stylesheet" href="css/ion.rangeSlider.skinFlat.css" />
<link rel="stylesheet" href="css/my.css"/>

<script src="modernizr-1.6.min.js"></script>
<script type="text/javascript">

    var color_red = "#FF0000"
    var color_green = "#00FF33"
    var color_blue = "#0900FF"
    var color_white = "#FFFFFF"
    var color_yellow = "#F7FF00"

     var target_color = color_red;
     var additional_color = color_yellow;



window.addEventListener('load', eventWindowLoaded, false);
function eventWindowLoaded() {
   canvasApp();
}

function canvasSupport () {
     return Modernizr.canvas;
}

function canvasApp() {

   if (!canvasSupport()) {
          return;
        }

  var frames_num = 0
  var frame_to_appear = 5 * 30 + Math.random() * 60


  function  drawScreen () {
    context.fillStyle='#000000';
    context.fillRect(0,0,theCanvas.width,theCanvas.height);
    context.fill()

   frames_num += 1;

      context.fillStyle = '#EEEEEE';
      context.fillRect(0, 0, theCanvas.width, theCanvas.height);
      
      //Box
      context.strokeStyle = '#000000';
      context.strokeRect(1,  1, theCanvas.width-2, theCanvas.height-2);

      //Place balls
      context.fillStyle = target_color;
      var ball;

    // first 5 are target balls
    // after 3 additional
   // finally one 

	if (frames_num > frame_to_appear){
	   context.fillStyle = color_green;

         feature_ball.x += feature_ball.xunits;

         context.beginPath();
         context.arc(feature_ball.x,feature_ball.y,feature_ball.radius,0,Math.PI*2,true);
         context.closePath();
         context.fill();

         //if (ball.x > theCanvas.width || ball.x < 0 ) {
          //  ball.angle = 180 - ball.angle;
          //  updateBall(ball);
        // } else if (ball.y > theCanvas.height || ball.y < 0) {
        //    ball.angle = 360 - ball.angle;
         //   updateBall(ball);
        // }

	}

      for (var i = 0; i <balls.length; i++) {
	context.fillStyle = target_color;

         ball = balls[i];
         ball.x += ball.xunits;
         ball.y += ball.yunits;

         context.beginPath();
	 context.arc(ball.x,ball.y,ball.radius,0,Math.PI*2,true);
         context.closePath();
         context.fill();

         if (ball.x > theCanvas.width || ball.x < 0 ) {
            ball.angle = 180 - ball.angle;
            updateBall(ball);
         } else if (ball.y > theCanvas.height || ball.y < 0) {
            ball.angle = 360 - ball.angle;
            updateBall(ball);
         }
      }
	for (var i = 0; i <additional_balls.length; i++) {
        context.fillStyle = additional_color;

         ball = additional_balls[i];
         ball.x += ball.xunits;
         ball.y += ball.yunits;

         context.beginPath();
         context.arc(ball.x,ball.y,ball.radius,0,Math.PI*2,true);
         context.closePath();
         context.fill();

         if (ball.x > theCanvas.width || ball.x < 0 ) {
            ball.angle = 180 - ball.angle;
            updateBall(ball);
         } else if (ball.y > theCanvas.height || ball.y < 0) {
            ball.angle = 360 - ball.angle;
            updateBall(ball);
         }
      }


   }

   function updateBall(ball) {

      ball.radians = ball.angle * Math.PI/ 180;
      ball.xunits = Math.cos(ball.radians) * ball.speed;
      ball.yunits = Math.sin(ball.radians) * ball.speed;

   }

   var target_balls = 5;
   var add_balls_num = 3;
   var feature_ball = 1;

   var target_ball_size = 20
   var additional_ball_size = 24
   var feature_ball_size = 25

   var numBalls = 9 ;
   var maxSize = 20;
   var minSize = 20;
   var maxSpeed = maxSize+5;
   var balls = new Array();
   var additional_balls = new Array()
   var tempBall;
   var tempX;
   var tempY;
   var tempSpeed;
   var tempAngle;
   var tempRadius;
   var tempRadians;
   var tempXunits;
   var tempYunits;

   var feature_ball_speed = 20

   theCanvas = document.getElementById("canvasOne");
   context = theCanvas.getContext("2d");

   for (var i = 0; i < target_balls; i++) {
      tempRadius = Math.floor(Math.random()*maxSize)+minSize;
      tempX = tempRadius*2 + (Math.floor(Math.random()*theCanvas.width)-tempRadius*2);
      tempY = tempRadius*2 + (Math.floor(Math.random()*theCanvas.height)-tempRadius*2);
      tempSpeed = maxSpeed-tempRadius;
      tempAngle = Math.floor(Math.random()*360);
      tempRadians = tempAngle * Math.PI/ 180;
      tempXunits = Math.cos(tempRadians) * tempSpeed;
      tempYunits = Math.sin(tempRadians) * tempSpeed;

      tempBall = {x:tempX,y:tempY,radius:target_ball_size, speed:tempSpeed, angle:tempAngle, 
          xunits:tempXunits, yunits:tempYunits}
      balls.push(tempBall);
   }

   for (var i = 0; i < add_balls_num; i++) {
      tempRadius = Math.floor(Math.random()*maxSize)+minSize;
      tempX = tempRadius*2 + (Math.floor(Math.random()*theCanvas.width)-tempRadius*2);
      tempY = tempRadius*2 + (Math.floor(Math.random()*theCanvas.height)-tempRadius*2);
      tempSpeed = maxSpeed-tempRadius;
      tempAngle = Math.floor(Math.random()*360);
      tempRadians = tempAngle * Math.PI/ 180;
      tempXunits = Math.cos(tempRadians) * tempSpeed;
      tempYunits = Math.sin(tempRadians) * tempSpeed;

      tempBall = {x:tempX,y:tempY,radius:additional_ball_size, speed:tempSpeed, angle:tempAngle, 
          xunits:tempXunits, yunits:tempYunits}
      additional_balls.push(tempBall);
   }


   var feature_ball = {x:5, y:theCanvas.height/2.0, radius:feature_ball_size ,speed:feature_ball_speed, angle:0, xunits:minSize, yunits:0}


   setInterval(drawScreen, 33);

   }


</script>

</head>
<body>

<div class="divTable">
<div class="divTableBody">
<div class="divTableRow">
<div class="divTableCell">&nbsp;
        <input type="text" id="add_colors" value="" name="range"/>
</div>
<div class="divTableCell">&nbsp;
<input type="text" id="colors" value="" name="range" />
</div>
</div>
</div>
</div>
<div>
        <canvas id="canvasOne" width=1280; height=720;">
</div>
<!-- DivTable.com -->

<script src="js/jquery-1.12.3.min.js"></script>
<script src="js/ion.rangeSlider.js"></script>

<script>
$(function(){
$("#add_colors").ionRangeSlider({
    grid: true,
    from: 0,
    onFinish: function(data){
        console.log(data);
        if (data.from_value == 'red'){
                additional_color = color_red;
        }
        if (data.from_value == 'green'){
                additional_color = color_green;
        }
        if (data.from_value == 'blue'){
                additional_color = color_blue;
        }
        if (data.from_value == 'white'){
                additional_color = color_white;
        }
        if (data.from_value == 'yellow'){
                additional_color = color_yellow;
        }
    },
    values: [
        "red", "green", "blue", "white", "yellow"
    ]
});
});

</script>

<script>
$(function(){
$("#colors").ionRangeSlider({
    grid: true,
    from: 3,
    onFinish: function(data){
	console.log(data);
	if (data.from_value == 'red'){
		target_color = color_red;
	}
	if (data.from_value == 'green'){
		target_color = color_green;
	}
	if (data.from_value == 'blue'){
		target_color = color_blue;
	}
	if (data.from_value == 'white'){
		target_color = color_white;
	}
	if (data.from_value == 'yellow'){
		target_color = color_yellow;
	}
    },
    values: [
        "red", "green", "blue", "white", "yellow"
    ]
});
});
</script>


</body>
</html>
